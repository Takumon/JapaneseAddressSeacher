buildscript {
    repositories {
        maven {url "http //repo1.maven.org/maven2"}
        maven {url "https //plugins.gradle.org/m2"}
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.2.RELEASE")
    }
}


apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'application'
apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'pmd'
apply plugin: 'jacoco'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'


version = '0.9'
defaultTasks "clean", "build"

ext {
    javaVersion = 1.8
    defaultEncoding = 'UTF-8'
    
}


sourceCompatibility = javaVersion
targetCompatibility  = javaVersion
tasks.withType(AbstractCompile)*.options*.encoding = defaultEncoding
tasks.withType(GroovyCompile)*.groovyOptions*.encoding = defaultEncoding
mainClassName = 'jp.takumon.japaneseaddresssearcher.App'


repositories {
    mavenCentral()
    maven { url "https://repository.jboss.org/nexus/content/repositories/releases"}
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}


dependencies {
    compile group: "org.webjars", name: "jquery", version: "2.2.4"
    compile group: "org.webjars.bower", name: "bootstrap", version: "3.3.7"
    compile group: 'org.webjars', name: 'webjars-locator', version: '0.32'
    
    compile 'com.h2database:h2:1.4.187'
    compile group: 'org.lazyluke', name:'log4jdbc-remix', version:'0.2.7'
    compile(group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '1.5.2.RELEASE') {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile group: 'org.springframework.boot', name: 'spring-boot-devtools', version: '1.5.2.RELEASE'
    compile group: "org.springframework.boot", name: "spring-boot-starter-jetty", version: '1.5.2.RELEASE'
    compile group: "org.springframework.boot", name: "spring-boot-starter-actuator", version: '1.5.2.RELEASE'
    compile group: 'org.springframework.boot', name:'spring-boot-starter-jdbc', version:'1.5.2.RELEASE'
    compile group: 'org.springframework.boot', name:'spring-boot-starter-aop', version:'1.5.2.RELEASE'
    compile group: 'org.springframework.boot', name:'spring-boot-starter-thymeleaf', version:'1.5.2.RELEASE'
    compile group: 'org.seasar.doma.boot', name: 'doma-spring-boot-starter', version: '1.1.0'
    
    testCompile group: 'org.springframework.boot', name:'spring-boot-starter-test', version:'1.5.2.RELEASE'
    testCompile group: 'org.springframework.boot', name:'spring-boot-test-autoconfigure', version:'1.5.2.RELEASE'
	testCompile group: 'org.seleniumhq.selenium', name: 'selenium-api', version: '3.3.1'
}


jar {
    baseName = 'address-searcher'
    version =  '0.1.0'
}

// Doma設定 コンパイル前にSQLファイルをビルド先に移動する
processResources.destinationDir = compileJava.destinationDir
compileJava.dependsOn processResources


checkstyle {
    ignoreFailures = true
    sourceSets = [sourceSets.main]
    toolVersion = '7.6.1'
}

findbugs {
    toolVersion = "3.0.1"
    sourceSets = [sourceSets.main]
    ignoreFailures = true
}

pmd {
    ignoreFailures = true
    sourceSets = [sourceSets.main]
}

tasks.withType(Pmd) {
    reports {
      xml.enabled = true
    }
}

check.doLast {
    File outputDir = new File("$reportsDir/cpd/")
    outputDir.mkdirs()
    println new File(outputDir, 'cpd.xml')
  
    ant.taskdef(
        name: 'cpd', 
        classname: 'net.sourceforge.pmd.cpd.CPDTask',
        classpath: configurations.pmd.asPath)
  
    ant.cpd(
        minimumTokenCount: '100',
        format: 'xml',
        encoding: defaultEncoding,
        outputFile: new File(outputDir, 'cpd.xml')
    ) {
        fileset(dir: "src/main/java") {
            include(name: '**/*.java')
        }
    }
}

javadoc {
    options.memberLevel = JavadocMemberLevel.PRIVATE
    failOnError = false
}

test {
    ignoreFailures = true
    reports {
        junitXml.enabled = true
        html.enabled = true
    }
}

jacoco {
    toolVersion = '0.7.5.201505241946'
}

jacocoTestReport {
    reports {
      html.enabled = true
      xml.enabled = true
    }
}


task wrapper (type: Wrapper) {
    gradleVersion = '3.4.1'
}
