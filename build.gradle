buildscript {
    repositories {
        maven {url "http//repo1.maven.org/maven2"}
        maven {url "https//plugins.gradle.org/m2"}
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.2.1"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.5.2.RELEASE"
    }
}


apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'application'
apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'pmd'
apply plugin: 'jacoco'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: "org.sonarqube"



ext {
    appVersion = '0.1.0'
    appName = 'AddressSearcher'
    javaVersion = 1.8
    defaultEncoding = 'UTF-8'
    
}


sourceCompatibility = javaVersion
targetCompatibility  = javaVersion
tasks.withType(AbstractCompile)*.options*.encoding = defaultEncoding
tasks.withType(GroovyCompile)*.groovyOptions*.encoding = defaultEncoding
mainClassName = 'jp.takumon.japaneseaddresssearcher.App'


repositories {
    mavenCentral()
    maven { url "https://repository.jboss.org/nexus/content/repositories/releases"}
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

dependencies {
    def springBootVersion = '1.5.2.RELEASE'
    
    // クライアント
    compile group: "org.webjars", name: "jquery", version: "2.2.4"
    compile group: "org.webjars.bower", name: "bootstrap", version: "3.3.7"
    compile group: 'org.webjars', name: 'webjars-locator', version: '0.32'
    

    // Spring framework
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: springBootVersion
    compile group: 'org.springframework.boot', name:'spring-boot-starter-jdbc', version:springBootVersion
    compile group: 'org.springframework.boot', name:'spring-boot-starter-aop', version:springBootVersion
    compile group: 'org.springframework.boot', name:'spring-boot-starter-thymeleaf', version:springBootVersion
    compile group: 'org.seasar.doma.boot', name: 'doma-spring-boot-starter', version: '1.1.0'
    compile group: 'org.springframework.boot', name:'spring-boot-starter-security', version:springBootVersion

	// 開発で必要なライブラリ
    compile group: 'org.springframework.boot', name: 'spring-boot-devtools', version: springBootVersion
    compile group: "org.springframework.boot", name: "spring-boot-starter-actuator", version: springBootVersion
    compile group: 'org.springframework.boot', name: 'spring-boot-actuator-docs', version: springBootVersion
    compile group: 'am.ik.beansviz', name: 'beansviz-spring-boot-actuator', version: '0.1.0'
    compile group: 'org.jolokia', name: 'jolokia-core', version: '1.3.6'

    // DBとWebサーバ
    // 開発中はH2と組み込みTomcat、運用中はMySQL,既存のTomcatを使う
    providedRuntime 'com.h2database:h2:1.4.187'
    providedRuntime "org.springframework.boot:spring-boot-starter-tomcat"
    compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.40'
    
	// ドキュメント
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.6.1'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.6.1'
    
    // その他
    compile group: 'com.google.guava', name: 'guava', version: '21.0'
    compile group: 'org.lazyluke', name:'log4jdbc-remix', version:'0.2.7'
    
    // テスト関連
    testCompile group: 'org.springframework.boot', name:'spring-boot-starter-test', version:springBootVersion
    testCompile group: 'org.springframework.boot', name:'spring-boot-test-autoconfigure', version:springBootVersion
    testCompile group: 'org.springframework.security', name: 'spring-security-test', version: '4.2.2.RELEASE'
    testCompile group: 'org.seleniumhq.selenium', name: 'selenium-api', version: '3.3.1'
    testCompile group: 'net.sourceforge.htmlunit', name: 'htmlunit', version: '2.23'
    testCompile group: 'org.seleniumhq.selenium', name: 'htmlunit-driver', version: '2.23'
}

jar {
    baseName = appName
    version =  appVersion
}

war {
    baseName = appName
    version =  appVersion
}


// Doma設定 コンパイル前にSQLファイルをビルド先に移動する
processResources.destinationDir = compileJava.destinationDir
compileJava.dependsOn processResources


checkstyle {
    ignoreFailures = true
    sourceSets = [sourceSets.main]
    toolVersion = '7.6.1'
}

findbugs {
    toolVersion = "3.0.1"
    sourceSets = [sourceSets.main]
    ignoreFailures = true
}

pmd {
    ignoreFailures = true
    sourceSets = [sourceSets.main]
}

tasks.withType(Pmd) {
    reports {
      xml.enabled = true
    }
}

check.doLast {
    File outputDir = new File("$reportsDir/cpd/")
    outputDir.mkdirs()
  
    ant.taskdef(
        name: 'cpd', 
        classname: 'net.sourceforge.pmd.cpd.CPDTask',
        classpath: configurations.pmd.asPath)
  
    ant.cpd(
        minimumTokenCount: '100',
        format: 'xml',
        encoding: defaultEncoding,
        outputFile: new File(outputDir, 'cpd.xml')
    ) {
        fileset(dir: "src/main/java") {
            include(name: '**/*.java')
        }
    }
}

javadoc {
    options.memberLevel = JavadocMemberLevel.PRIVATE
    failOnError = false
}

test {
    ignoreFailures = true
    reports {
        junitXml.enabled = true
        html.enabled = true
    }
}

jacoco {
    toolVersion = '0.7.5.201505241946'
}

jacocoTestReport {
    reports {
      html.enabled = true
      xml.enabled = true
    }
    
    // カバレッジ測定対象外のクラスを除外
    afterEvaluate { 
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                '**/*Test.class', // Testクラス
                '**/_*.class', // Domaが生成するクラス
                '**/TestHelper.class', // Test用ユーティルクラス
            ]) 
        })
    }
}

// ローカル用タスク
sonarqube {
    properties {
        property "sonar.host.url", "http://localhost:9000/"
        property "sonar.exclusions", "**/*Test.java"
        property "sonar.projectName", "AddressSearcher"
        property "sonar.projectVersion", appVersion
        property 'sonar.junit.reportsPath', "${buildDir}/test-results/test"
        property "sonar.jacoco.reportPaths", "${project.buildDir}/jacoco/test.exec"
        property "sonar.findbugs.effort", "Max"
        property "sonar.findbugs.confidenceLevel", "low"
    }
}

task wrapper (type: Wrapper) {
    gradleVersion = '2.14.1'
}
